{"version":3,"sources":["components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/Errors/FetchError.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/Errors/EmptyData.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","_jsx","className","children","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","FetchError","findParent","peopleFromServer","name","find","pers","PersonLink","_ref","person","people","personSlug","useParams","mother","motherName","father","fatherName","_jsxs","classNames","slug","Link","to","concat","sex","born","died","PeopleTable","map","EmptyData","People","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","useEffect","catch","error","finally","_Fragment","length","NotFoundPage","Nav","role","NavLink","isActive","_ref2","App","Routes","Route","path","element","Navigate","replace","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.90c458cc.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const FetchError = () => {\n  return (\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      Something went wrong\n    </p>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nconst findParent = (peopleFromServer: Person[], name?: string | null) => {\n  if (name) {\n    return peopleFromServer.find(pers => pers.name === name);\n  }\n  /* eslint-disable-next-line */\n  return;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const { personSlug } = useParams();\n  const mother = findParent(people, person.motherName);\n  const father = findParent(people, person.fatherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={classNames({\n        'has-background-warning': person.slug === personSlug,\n      })}\n    >\n      <td>\n        <Link\n          to={`${person.slug}`}\n          className={classNames({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {mother ? (\n          <Link\n            to={`${mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {mother.name}\n          </Link>\n        ) : `${person.motherName || '-'}`}\n\n      </td>\n\n      <td>\n        {father ? (\n          <Link to={`${father.slug}`}>\n            {father.name}\n          </Link>\n        ) : `${person.fatherName || '-'}`}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n            people={people}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export const EmptyData = () => {\n  return (\n    <p data-cy=\"noPeopleMessage\">\n      There are no people on the server\n    </p>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { FetchError } from './Errors/FetchError';\nimport { PeopleTable } from './PeopleTable';\nimport { EmptyData } from './Errors/EmptyData';\n\nexport const People = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(peopleFromServer);\n      })\n      .catch((error) => {\n        setIsError(true);\n        throw error;\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              <PeopleTable\n                people={people}\n              />\n\n              {isError && <FetchError />}\n              {people.length === 0 && !isLoading && <EmptyData />}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Nav = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { People } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { Nav } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Nav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\" element={<People />}>\n            <Route\n              path=\":personSlug\"\n              element={<People />}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}